/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aras;

import java.sql.*;
import clases.Conexion;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;

/**
 *
 * @author mjgod
 */
public class GraficaNiveles extends javax.swing.JFrame {

    String user;
    int[] vector_marcas_cantidad = new int[11];
    //int[] vector_niveles_cantidad = new int[7];
    int[] variables = new int[11];
    String[] vector_marcas_nombre = new String[11];
    //String[] vector_niveles_nombre = new String[7];
    //String[] variables = new String[11];
    String[] nivelesExistentes = new String[11];
    int hp, lenovo, dell, acer, apple, toshiba, brother, samsung, asus, alienware, xerox, primero;

    /**
     * Creates new form GraficaEstatus
     */
    public GraficaNiveles() {
        String[] vector_niveles_nombre = new String[7];
        int[] vector_niveles_cantidad = new int[7];
        initComponents();

        user = Login.user;

        setTitle("Listado de alumnos");
        setSize(550, 450);
        setResizable(false);
        setLocationRelativeTo(null);

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        ImageIcon wallpaper = new ImageIcon("src/images/fondo3.jpg");
        Icon icono = new ImageIcon(wallpaper.getImage().getScaledInstance(jLabel_Wallpaper.getWidth(),
                jLabel_Wallpaper.getHeight(), Image.SCALE_DEFAULT));

        jLabel_Wallpaper.setIcon(icono);
        this.repaint();

        /*
         try {

            Connection cn2 = Conexion.conectar();
            PreparedStatement pst2 = cn2.prepareStatement(
                    "select nivel from niveles");
            ResultSet rs2 = pst2.executeQuery();
            int c = 0;
            while(rs2.next()){
                
                nivelesExistentes[c] = rs2.getString(1);
                c++;
            }
            cn2.close();
            
        } catch (SQLException e) {
            System.err.println("Error en la consulta. " + e);
            JOptionPane.showMessageDialog(null, "ERROR en consultar datos, contacte al administrador.");
        }*/
        
        try {

            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(
                    "select grado, count(grado) as Grados from alumnos group by grado");
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                int posicion = 0;
                do {
                    vector_niveles_nombre[posicion] = rs.getString(1); //.substring(0, 1);
                    vector_niveles_cantidad[posicion] = rs.getInt(2);

                    if (vector_niveles_nombre[posicion].equalsIgnoreCase("1º grado (Varones)")) {
                        primero = vector_niveles_cantidad[posicion];
                    } else if (vector_niveles_nombre[posicion].equalsIgnoreCase("2º grado (Varones)")) {
                        alienware = vector_niveles_cantidad[posicion];
                    } else if (vector_niveles_nombre[posicion].equalsIgnoreCase("3º grado (Varones)")) {
                        apple = vector_niveles_cantidad[posicion];
                    } else if (vector_niveles_nombre[posicion].equalsIgnoreCase("4º grado (Varones)")) {
                        asus = vector_niveles_cantidad[posicion];
                    } else if (vector_niveles_nombre[posicion].equalsIgnoreCase("5º grado (Varones)")) {
                        brother = vector_niveles_cantidad[posicion];
                    } else if (vector_niveles_nombre[posicion].equalsIgnoreCase("6º grado (Varones)")) {
                        dell = vector_niveles_cantidad[posicion];
                    } else if (vector_niveles_nombre[posicion].equalsIgnoreCase("7º grado (Varones)")) {
                        hp = vector_niveles_cantidad[posicion];
                    }
                    posicion++;
                } while (rs.next());
            }

        } catch (SQLException e) {
            System.err.println("Error en la consulta. " + e);
            JOptionPane.showMessageDialog(null, "ERROR en consultar datos, contacte al administrador.");
        }

        repaint();
    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("images/cuatroVientos.jpg"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel_footer = new javax.swing.JLabel();
        jLabel_Wallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Grafica de marcas");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jLabel_footer.setText("Creado por Marcos Godoy ®");
        getContentPane().add(jLabel_footer, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 380, -1, -1));
        getContentPane().add(jLabel_Wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 550, 458));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GraficaNiveles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GraficaNiveles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GraficaNiveles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GraficaNiveles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GraficaNiveles().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel_Wallpaper;
    private javax.swing.JLabel jLabel_footer;
    // End of variables declaration//GEN-END:variables

    @Override
    public void paint(Graphics g){
        super.paint(g);
        
        int total_marcas = acer + alienware + apple + asus + brother + dell + hp;
        
        
        int grados_acer = primero * 360 / total_marcas;
        int grados_alienware = alienware * 360 / total_marcas;
        int grados_apple = apple * 360 / total_marcas;
        int grados_asus = asus * 360 / total_marcas;
        int grados_brother = brother * 360 / total_marcas;
        int grados_dell = dell * 360 / total_marcas;
        int grados_hp = hp * 360 / total_marcas;
        
        g.setColor(new Color(175,122,197));
        g.fillArc(25, 100, 270, 270, 0, primero);
        g.fillRect(310,120,20,20);
        g.drawString(acer + " de Acer", 340, 135);
        
        g.setColor(new Color(0,255,0));
        g.fillArc(25, 100, 270, 270, grados_acer, grados_alienware);
        g.fillRect(310,150,20,20);
        g.drawString(alienware + " de Alienware", 340, 165);
        
        g.setColor(new Color(0,255,255));
        g.fillArc(25, 100, 270, 270, grados_acer + grados_alienware, grados_apple);
        g.fillRect(310,180,20,20);
        g.drawString(apple + " de Apple", 340, 195);
        
        g.setColor(new Color(55,0,255));
        g.fillArc(25, 100, 270, 270, grados_acer + grados_alienware + grados_apple, grados_asus);
        g.fillRect(310,210,20,20);
        g.drawString(asus + " de Asus", 340, 225);
        
        g.setColor(new Color(255,255,255));
        g.fillArc(25, 100, 270, 270, grados_acer + grados_alienware + grados_apple + grados_asus, grados_brother);
        g.fillRect(310,240,20,20);
        g.drawString(brother + " de Brother", 340, 255);
        
        g.setColor(new Color(247,220,111));
        g.fillArc(25, 100, 270, 270, grados_acer + grados_alienware + grados_apple + grados_asus + grados_brother, grados_dell);
        g.fillRect(310,270,20,20);
        g.drawString(dell + " de Dell", 340, 285);
        
        g.setColor(new Color(21,42,160));
        g.fillArc(25, 100, 270, 270, grados_acer + grados_alienware + grados_apple + grados_asus + grados_brother + grados_dell, grados_hp);
        g.fillRect(310,300,20,20);
        g.drawString(hp + " de HP", 340, 315);
        
        
    }
    
}
